@model MediLab.Models.Imagen


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken() 
           

            <div class="form-horizontal">
                <h4>Imagen</h4>
                <hr />
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                <b>Vista Previa</b>
                            </a>
                        </h4>
                    </div>
                   <div id="collapse1" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <img src="@Url.Content(Model.Path)" />
                        </div>
                    </div>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Articulo</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Articulo.Titulo, new { htmlAttributes = new { @class = "form-control", @id = "buscador" } })
                        @Html.ValidationMessageFor(model => model.Articulo.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Comentarios, 5, 5, htmlAttributes: new { @class = "form-control", style = "width: 40%; max-width: 40%;" })
                        @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
                    </div>
                </div>              

                @Html.HiddenFor(model => model.IdArticulo)

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>

@section scripts {

    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">


    <script>
        var slideIndex = 1;
        showDivs(slideIndex);

        function plusDivs(n) {
            showDivs(slideIndex += n);
        }

        function showDivs(n) {
            var i;
            var x = document.getElementsByClassName("mySlides");
            if (n > x.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = x.length }
            for (i = 0; i < x.length; i++) {
                x[i].style.display = "none";
            }
            x[slideIndex - 1].style.display = "block";
        }
    </script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

            $("#buscador").autocomplete(
            {
                minLength: 3, //Empieza a buscar a partir de los 3 caracteres ingresados
                focus: function (event, ui) {
                    event.preventDefault(); //Con esta llamada evito que se cargue con el value del autocomplete
                    $("#buscador").val(ui.item.label);

                },
                select: function (event, ui) { //Cuando finaliza configuro los valores del campo oculto
                    event.preventDefault();
                    $("#buscador").val(ui.item.label);
                    $("#IdArticulo").val(ui.item.value);
                },
                source: function (request, response) {

                    $.ajax({
                        url: '/Articulo/BuscarArticulo',
                        type: 'POST',
                        data: { term: $("#buscador").val() },
                        cache: false,
                        dataType: 'json',
                        success: function (json) {
                            response($.map(json, function (data) {
                                return {
                                    label: data.value,
                                    value: data.Id
                                };
                            }));
                        },
                    })

                }
            }
         );
        });
</script>

}