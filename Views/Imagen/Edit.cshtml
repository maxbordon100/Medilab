@model MediLab.Models.Imagen


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>

    <style>
          .borderClass {
            border: 2px solid red;
            border-radius: 4px;
        }

        .btn-file {
            position: relative;
            overflow: hidden;
        }

            .btn-file input[type=file] {
                position: absolute;
                top: 0;
                right: 0;
                min-width: 100%;
                min-height: 100%;
                font-size: 100px;
                text-align: right;
                filter: alpha(opacity=0);
                opacity: 0;
                outline: none;
                background: white;
                cursor: inherit;
                display: block;
            }
    </style>
</head>
<body>
    @using (Html.BeginForm("Edit", "Imagen", FormMethod.Post,
                        new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken() 
           

            <div class="form-horizontal">
                <h4>Imagen</h4>
                <hr />
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                <b>Vista Previa</b>
                            </a>
                        </h4>
                    </div>
                   <div id="collapse1" class="panel-collapse collapse in">
                        <div class="panel-body">
                            <img src="@Url.Content(Model.Path)" />
                        </div>
                    </div>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div id="error">
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Articulo</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Articulo.Titulo, new { htmlAttributes = new { @class = "form-control", @id = "buscador" } })
                        @Html.ValidationMessageFor(model => model.Articulo.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Comentarios, 5, 5, htmlAttributes: new { @class = "form-control", style = "width: 40%; max-width: 40%;" })
                        @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Imagen</label>
                    <div class="col-md-10">
                        <span class="btn btn-primary btn-file">
                            Archivo... <input type="file" name="file" id="file" accept="image/*" />
                        </span>
                    </div>
                </div>   
                              

                @Html.HiddenFor(model => model.IdArticulo)

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar Cambios" onclick="return validatefields();"  class="btn btn-primary"  />
                    </div>
                </div>
            </div>
    }
    
    <div>
        <a href='@Url.Action("Index", "Imagen")'>
            <img src="https://cdn.icon-icons.com/icons2/217/PNG/512/checklist_25365.png" data-toggle="tooltip" data-placement="top" title="Volver al listado" width="30" height="30" />
        </a>
    </div>
</body>
</html>



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
            $("#buscador").autocomplete(
            {
                minLength: 3, //Empieza a buscar a partir de los 3 caracteres ingresados
                focus: function (event, ui) {
                    event.preventDefault(); //Con esta llamada evito que se cargue con el value del autocomplete
                    $("#buscador").val(ui.item.label);

                },
                select: function (event, ui) { //Cuando finaliza configuro los valores del campo oculto
                    event.preventDefault();
                    $("#buscador").val(ui.item.label);
                    $("#IdArticulo").val(ui.item.value);
                },
                source: function (request, response) {

                    $.ajax({
                        url: '/Articulo/BuscarArticulo',
                        type: 'POST',
                        data: { term: $("#buscador").val() },
                        cache: false,
                        dataType: 'json',
                        success: function (json) {
                            if (json.length > 0) {
                                response($.map(json, function (data) {
                                    return {
                                        label: data.value,
                                        value: data.Id
                                    };
                                }));
                            }
                            else { $("#IdArticulo").val(0); } //Si no lo encuentra limpia el campo oculto del artículo
                        },
                    })

                }
            }
         );
        
</script>

<script>
    function validatefields() {
        $("#error").removeClass('alert alert-danger');
        $("#Titulo").removeClass('borderClass');
        $("#buscador").removeClass('borderClass');
        $("#error").html("");
        var error_signal = 0
        var msg = "";
        var field = "";
        var valor = $.trim($("#Titulo").val());
        if (valor.length == 0) {
            error_signal = 1;
            msg = "Complete campo <b>Título</b>";
            field = "#Titulo";
        }
        else {
            valor = $.trim($("#buscador").val());
            if (valor.length == 0) {
                error_signal = 1;
                msg = "Complete campo <b>Artículo</b>";
                field = "#buscador";
            }
            else {
                valor = $("#IdArticulo").val();
                if (valor == 0) {
                    error_signal = 1;
                    msg = "El artículo indicado no existe";
                    field = "#buscador";
                }
                else {
                    valor = $("#file").val();
                    if (valor.length == 0) {
                        error_signal = 1;
                        msg = "Seleccione un archivo";
                        field = "#file";
                    }
                    else {//Extensiones de imagenes
                        extensions = new Array(".bmp",
                                               ".gif",
                                               ".jpg",
                                               ".png",
                                               ".psd",
                                                ".ai",
                                                ".cdr",
                                                ".dwg",
                                                ".svg",
                                                ".raw",
                                                ".nef"
                                           );
                        var fileExt = valor.substring(valor.lastIndexOf('.'));
                        if (extensions.indexOf(fileExt) < 0) {
                            error_signal = 1;
                            msg = "El archivo tiene que una imagen <b>(Extensiones válidas: .bmp,.gif,.jpg,.png,.psd,.ai,.cdr,.dwg,.svg,.raw,.nef)</b>";
                            field = "#file";
                        }
                    }

                }
            }
        }
        if (error_signal == 1) {
            $("#error").addClass("alert alert-danger");
            $("#error").html("<strong>Atención!</strong> " + msg);
            $(field).addClass('borderClass');
            return false;
        }
        return true;

    }

</script>


